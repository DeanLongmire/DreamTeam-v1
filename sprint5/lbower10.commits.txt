controllers/global_teams.js:
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   1) /*
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   2)     Controller for creating teams
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   3) */
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   4) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   5) const global_teams = require("../Teams/global_teams_db.js");
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   6) const { v4: uuidv4 } = require('uuid');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   7) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   8) let db = new global_teams.team_dbmanager;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400   9) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  10) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  11) const get_path = (callback) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  12)     const pwd = process.cwd();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  13)     let db_path = pwd;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  14)     db_path = db_path + "\\DreamTeam\\Back-End\\database.db";
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  15)     db_path = db_path.replace(/\\/g,"/");
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  16) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  17)     callback(db_path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  18) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  19) 
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  20) // Get team information
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  21) const get_team = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  22)     const { id } = req.params;
412041e8 (jlongmi9     2023-05-04 22:06:45 -0400  23)     console.log(id)
412041e8 (jlongmi9     2023-05-04 22:06:45 -0400  24)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  25)     get_path( (path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  26)         db.open(path);
1685cc33 (jlongmi9     2023-05-04 17:28:03 -0400  27)         db.get_all(id, (name, ID, P_ID, A_ID, sport, num_players, W, L, profile_picture) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  28)             console.log(`${name} ${ID} ${P_ID} ${sport} ${num_players} ${W} ${L}`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  29)             const teamData = {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  30)                 name: name,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  31)                 id: ID,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  32)                 p_id: P_ID,
685fdcac (Logan Bowers 2023-05-08 18:07:23 -0400  33)                 a_id: A_ID,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  34)                 sport: sport,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  35)                 nPlayers: num_players,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  36)                 w: W,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  37)                 l: L
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  38)             };
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  39)             JSON.stringify(teamData);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  40)             res.send(teamData);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  41)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  42)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  43)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  44) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  45)
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  46) const get_team_in_league = (req, res) =>{
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  47)     // get league id from param
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  48)     const { leagueid } = req.params;
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  49)     get_path((path) => {
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  50)         db.open(path);
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  58)             db.close();
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400  60)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  67) // Diplay all teams in DB
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  68) const show_all = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  69)     get_path( (path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  70)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  71)         db.display_all( (teams) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  72)             const data = {teams:teams}
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  73)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  74)             res.send(data);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  75)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  76)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  77)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  78)     //res.send("Read all teams");
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  79) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  80)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  81) // create a team
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  82) const create_team = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  83)     get_path( (path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  84)         const team = req.body;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  85)         const teamId = uuidv4();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  86)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  87)         //adds unique ID to the team (team W/ ID)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  88)         const teamWid = { ... team, id: teamId}
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  89)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  90)         console.log(teamWid);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  91)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  92)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  94)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400  95)             console.log("HERE")
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 100)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 101)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 102) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 103)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 104) // updating only name for a team
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 105) const update_team_name = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 106)     const { id } = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 107)     const new_name = req.body.newName;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 108)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 109)     console.log(new_name + " " + id);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 110)     get_path((path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 111)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 112)         db.update_name(new_name, id, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 113)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 114)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 115)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 116)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 117)     res.send('Team name updated');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 118) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 119)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 120) // updating only the sport that the team plays
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 121) const update_team_sport = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 122)     const { id } = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 123)     const new_sport = req.body.new_sport;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 124)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 125)     console.log(new_sport + " " + id);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 126)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 127)     get_path((path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 128)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 129)         db.update_sport(new_sport, id, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 130)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 131)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 132)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 133)     res.send(`team sport updated. Their sport is now ${new_sport}`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 134)     console.log(`sport is now: ${new_sport}`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 135) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 136)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 137) // Updating amount of players on a given team in this function
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 138) const updatePlayerCount = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 139)     const { id } = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 140)     const new_num_players = req.body.new_num_players;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 141)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 142)     console.log(`Team with id: ${id} had ${new_num_players - id.num_players}`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 143)     console.log(`Team with id: ${id} NOW has new player count of ${new_num_players}`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 144)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 145)     db.open(db_path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 146)     db.update_num_players(id.name, newPcount, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 147)         db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 148)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 149)     res.send('player count updated');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 150) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 151)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 152) // Deletes a team from the database
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 153) const DeleteTeam = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 154)     const { id } = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 155)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 156)     get_path( (path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 157)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 158)         db.delete(id, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 159)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 160)             res.send(`Team with the id ${id} deleted`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 161)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 162)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 163) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 164)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 165) const UpdateWins = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 166)     const {id} = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 167)     const wins = req.body.W;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 168)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 169)     console.log(`Team with id: ${id} now has ${wins} wins`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 170)     get_path((path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 171)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 172)         db.update_num_wins(wins, id, ()=> {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 173)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 174)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 175)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 176)     res.send('Team wins updated');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 177) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 178)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 179) const UpdateLosses = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 180)     const {id} = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 181)     const losses = req.body.L;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 182)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 183)     console.log(`Team with id: ${id} now has ${losses} losses`);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 184)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 185)     get_path((path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 186)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 187)         db.update_num_losses(losses, id, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 188)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 189)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 190)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 191)     res.send('Team losses updated');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 192) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 193)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 194) const SetA_ID = (req, res) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 195)     const {id} = req.params;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 196)     const adId = req.body.A_ID;
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 197)     get_path((path) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 198)         db.open(path);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 199)         db.SetAdminID(adId, id, () => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 200)             db.close();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 201)         });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 202)     });
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 203)     res.send('Team admin ID updated');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 204) }
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 205)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 206) // function that creates the session with all the teams data
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 207) const createTeamSession = (req, res, teamJSON, callback) => {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 208)     console.log('made it here 1');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 209)     req.session.team = {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 210)         teamName: teamJSON.name,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 211)         id: teamJSON.ID,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 212)         p_id: teamJSON.P_ID,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 213)         sport: teamJSON.sport,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 214)         num_players: teamJSON.num_players,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 215)         W: teamJSON.W,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 216)         L: teamJSON.L
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 217)     };
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 218)     console.log('made it here 2');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 219)     res.send('Showing Team Info');
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 220)     res.cookie('teamCookie' + teamJSON.id.substring(0,5), req.session.id);
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 221)     callback();
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 222) };
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 223)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 224) const update_profile_picture = (req, res) => {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 225)     const { id } = req.params;
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 226)     const new_pp = req.body.pp;
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 227)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 228)     //console.log(new_pp + " " + id);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 229)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 230)     storePhoto(new_pp, id, (picPath) => {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 231)         get_path( (path) => {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 232)             db.open(path);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 233)             db.update_profile_picture(picPath,id, () => {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 234)                 db.close();
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 235)             });
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 236)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 237)             res.send('Picture updated');
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 238)         });
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 239)     })
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 240) }
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 241)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 242) const storePhoto = function(base64Encoded, id, callback) {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 243)     const data = base64Encoded.replace(/^data:image\/\w+;base64,/, "");
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 244)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 245)     const buffer = Buffer.from(data, 'base64');
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 246)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 247)     let picPath = "./DreamTeam/Back-End/Teams/profile_pictures/" + id + ".png";
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 248)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 249)     fs.writeFile(picPath, buffer, function(err) {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 250)         if(err) {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 251)             console.log(err);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 252)         } else {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 253)             //console.log("The file was saved!");
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 254)         }
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 255)     });
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 256)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 257)     callback(picPath);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 258) }
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 260) const encodePhoto = function(picPath) {
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 261)     console.log(picPath)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 262)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 263)     let pic = fs.readFileSync(picPath);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 264)     let picBase64 = Buffer.from(pic).toString('base64');
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 265)
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 266)     //console.log("PIC STRING: " + picBase64);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 267)     return(picBase64);
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 268) }
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 269)
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 270) module.exports = {
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 271)     get_team,
f527a863 (Logan Bowers 2023-05-04 18:34:50 -0400 272)     get_team_in_league,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 273)     show_all,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 274)     create_team,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 275)     update_team_name,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 276)     update_team_sport,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 277)     updatePlayerCount,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 278)     DeleteTeam,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 279)     UpdateWins,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 280)     UpdateLosses,
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 281)     createTeamSession,
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 282)     SetA_ID,
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 283)     storePhoto,
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 284)     encodePhoto,
06c5def2 (Logan Bowers 2023-05-03 16:45:37 -0400 285)     update_profile_picture
^a24583e (Logan Bowers 2023-05-01 18:02:07 -0400 286) }

Front-End/teams/view_teams.js:
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400  66) let userCookieId;
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400  74) let getSessionId = function (callback) {
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 155)
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 156) //Setting the username
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 157) let setUserData = function (userDataJSON,callback) {
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 158)     if(userDataJSON.username){
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 159)       username = userDataJSON.username;
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 160)       welcomeButton.textContent = "Welcome, " + username + "!";
a17bfd65 (Logan Bowers      2023-05-04 21:16:03 -0400 161)     };
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 245) let setTeamData = function(teamDataJSON, callback){
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 246)   const tableBody = document.querySelector('#team-table tbody');
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 247)   const teamInModal = document.getElementById("team_in_modal");
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 248)   const enrollPlayer = document.getElementById("confirm_enrollment");
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 251)   // Get the modal
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 252)   var modal = document.getElementById("modal");
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 253)   // Get the <span> element that closes the modal
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 254)   var span = document.getElementsByClassName("close")[0];
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 255)
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 256)   names = teamDataJSON.names;
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 261)   for(let i = 0; i < names.length; i++){
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 262)     const teamname = names[i];
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 268)     const row = document.createElement('tr');
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 269)     const nameCol = document.createElement('td');
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 271)     const join = document.createElement('td');
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 272)     const join_bt = document.createElement('button');
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 273)     nameCol.textContent = teamname;
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 275)     join_bt.textContent = "Join this team";
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 276)     join_bt.classList.add("dynprog-button");
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 283)     join_bt.addEventListener("click", function(){
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 284)         modal.style.display = "block";
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 285)         teamInModal.textContent = teamname;
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 286)         enrollPlayer.addEventListener("click", function(){
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 304)         });
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 305)         console.log("button clicked");
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 306)       });
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 307)
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 308)       // When the user clicks on <span> (x), close the modal
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 309)       span.onclick = function() {
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 310)         modal.style.display = "none";
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 311)       }
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 312)
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 313)       // When the user clicks anywhere outside of the modal, close it
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 314)       window.onclick = function(event) {
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 315)           if (event.target == modal) {
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 316)              modal.style.display = "none";
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 317)           }
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 318)         }
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 319)
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 320)       //but.style.marginBottom = "10px";
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 321)       join.appendChild(join_bt);
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 322)       row.appendChild(nameCol);
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 324)       row.appendChild(join);
e9a8ac9d (Logan Bowers      2023-05-07 18:25:57 -0400 325)       tableBody.appendChild(row);